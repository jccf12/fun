lawn = [
    '2       ',
    '  S     ',
    '21  S   ',
    '13      ',
    '2 3     '
]

zombies = [[0, 4, 28], [1, 1, 6], [2, 0, 10], [2, 4, 15], [3, 2, 16], [3, 3, 13]]

# zombies


def plants_and_zombies(lawn, zombies):
    loops = 0
    done = False
    while not done:
        print(str(loops)+'.1.0')
        print_field2(lawn, zombies)

        k = 0  # move number
        n = len(lawn)  # n = number of rows
        m = len(lawn[0])  # m = number of columns

        # 1 horizontal shooting (no S shooters yet)
        # 1.1
        for row in range(n):
            print('row: ', row)
            zombsInRow = [z for z in zombies if z[1] == row and z[2] >= 0]
            zombsInRow.sort()
            print('zombsInRow: ', zombsInRow)
            if zombsInRow:
                shots = 0
                for ch in lawn[row]:
                    if ch.isdigit():
                        shots += int(ch)
                print('SHOTS: ', shots)
                zvictim = 0
                while shots > 0:
                    if zvictim > len(zombsInRow)-1:
                        shots = 0
                    else:
                        print('zombsInRow[zvictim]= ', zombsInRow[zvictim])
                        if shots > zombsInRow[zvictim][0]:
                            shots -= zombsInRow[zvictim][0]
                            zombsInRow[zvictim][2] = 0
                        else:
                            zombsInRow[zvictim][2] -= shots
                            shots = 0
                        print('zombsInRow[zvictim]= ', zombsInRow[zvictim])
                    zvictim += 1
        print('\n'+str(loops)+'.1.1')
        print_field2(lawn, zombies)
        # 2 S-shooting
        Srow = 0
        Slist = []
        for string in lawn:
            for y in range(len(string)):
                if 'S' == string[y]:
                    Slist.append([y, Srow])
            Srow += 1
        Slist.sort()
        Slist.reverse()
        for Sshooter in Slist:
            print('Sshooter= ', Sshooter)
            # 2.1 diagonal-up
            should_continue = True
            j = Sshooter[0]
            l = Sshooter[1]
            while should_continue:
                print('column= ', j-m+1, 'l= ', l)
                if j == m or l == 0:
                    should_continue = False
                    print('here1')
                else:
                    column = j-m+1
                    for zombi in zombies:
                        if (zombi[0], zombi[1]) == (column+1, l-1):
                            zombi[2] -= 1
                            if zombi[2] == 0:
                                should_continue = False
                    j += 1
                    l -= 1
            print('\n'+str(loops)+'.2.1')
            print_field2(lawn, zombies)
            # 2.2 S-horizontal
            zombsInRow = [z for z in zombies if z[1] == row]
            zombsInRow.sort()
            shots = 1
            zvictim = 0
            while shots > 0:
                if zvictim > len(zombsInRow)-1:
                    shots = 0
                else:
                    if zombsInRow[zvictim][2] > 0:
                        if shots > zombsInRow[zvictim][0]:
                            shots -= zombsInRow[zvictim][0]
                            zombsInRow[zvictim][0] = 0
                            zvictim += 1
                        else:
                            zombsInRow[zvictim][0] -= shots
                            shots = 0
                    else:
                        zvictim += 1
            print('\n'+str(loops)+'.2.2')
            print_field2(lawn, zombies)
            # 2.3 diagonal-down
            should_continue = True
            j = Sshooter[0]
            l = Sshooter[1]
            while should_continue:
                if j == m or l == n:
                    should_continue = False
                else:
                    column = j-m+1
                    for zombi in zombies:
                        if (zombi[0], zombi[1]) == (column-1, l+1):
                            zombi[2] -= 1
                            if zombi[2] == 0:
                                should_continue = False
                    j += 1
                    l += 1
            print('\n'+str(loops)+'.2.3')
            print_field2(lawn, zombies)

        # 3 eliminate dead Zombies
        z = len(zombies)
        for x in range(z):
            if x < z:
                if zombies[x][2] <= 0:
                    del zombies[x]
                    z -= 1

        # 3.1 Zombies moving
        for zombi in zombies:
            zombi[0] -= 1
        for t in range(len(lawn)):
            string = lawn[t]
            c = 0
            lastPindex = -1
            for ch in string:
                if ch != ' ':
                    lastPindex = c
                c += 1
            zombsInRow = [z for z in zombies if z[1] == t]
            zombsInRow.sort()
            if zombsInRow:
                if m + zombsInRow[0][0] == lastPindex:
                    if lastPindex < m and lastPindex > 0:
                        lawn[t] = string[:lastPindex] + ' ' + string[lastPindex+1:]
                    elif lastPindex == m:
                        lawn[t] = string[:lastPindex] + ' '
                    else:
                        lawn[t] = ' '+string[lastPindex+1:]
        print('\n'+str(loops)+'.3.1')
        print_field2(lawn, zombies)
        print('\n')
        done = True
        for string in lawn:
            for ch in string:
                if ch != ' ':
                    done = False
        for zombi in zombies:
            if zombi[0] == 1 - m:
                done = True
        if len(zombies) == 0:
            done = True
        loops += 1
        print('\n\n')


def print_field(lawn, zombies):
    n = len(lawn)  # n = number of rows
    m = len(lawn[0])  # m = number of columns
    field = []
    for r in range(n):
        zombsInRow = [z for z in zombies if z[1] == r]
        zpositions = []
        for z in zombsInRow:
            if z[0] <= 0:
                zpositions.append([z[0]-1, z[2]])
        fieldrow = list(lawn[r])
        for a in range(len(fieldrow)):
            if fieldrow[a] != ' ':
                fieldrow[a] = 'P' + fieldrow[a]
        for zpos in zpositions:
            fieldrow[zpos[0]] = 'Z' + str(zpos[1])
        field.append(fieldrow)
    for row in field:
        print(row)


def print_field2(lawn, zombies):
    # print('Lawn:')
    # for row in lawn:
        # print(row)
    print('Zombies:')
    print(zombies)

#print_field(lawn, zombies)


plants_and_zombies(lawn, zombies)
